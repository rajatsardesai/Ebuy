{"version":3,"file":"static/js/503.07c86b25.chunk.js","mappings":"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","sources":["components/MetaData.jsx","components/User/Signup.jsx","yupSchema/index.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst MetaData = ({ title }) => {\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n        </HelmetProvider>\n    )\n}\n\nexport default MetaData\n","import React, { useEffect, useState } from 'react';\nimport HeaderLoading from '../Header/HeaderLoading';\nimport HeaderAlert from '../Header/HeaderAlert';\nimport Container from 'react-bootstrap/esm/Container';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport MetaData from '../MetaData';\nimport Stack from 'react-bootstrap/esm/Stack';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../store/actions/userAction';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from \"formik\";\nimport { signupSchema } from '../../yupSchema';\n\nconst initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    avatar: process.env.PUBLIC_URL + \"/assets/style/profile.png\",\n    avatarPreview: process.env.PUBLIC_URL + \"/assets/style/profile.png\",\n};\n\nconst Signup = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { loading, isAuthenticated, success, error, message, headerLoading } = useSelector(\n        (state) => state.user\n    );\n\n    // Checks auhentication on button click\n    const [checkAuthentication, setCheckAuthentication] = useState(isAuthenticated);\n\n    // Form handling and validation -- Formik and Yup\n    const { values, setFieldValue, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({\n        initialValues,\n        validationSchema: signupSchema,\n        onSubmit: values => {\n            const registerForm = new FormData();\n\n            registerForm.set(\"name\", values.name.trim());\n            registerForm.set(\"email\", values.email.trim().toLowerCase());\n            registerForm.set(\"password\", values.password);\n            registerForm.set(\"avatar\", values.avatar);\n\n            dispatch(register(registerForm));\n        }\n    });\n\n    // Handle avatar data change\n    const handleAvatarChange = (e) => {\n        try {\n            const reader = new FileReader();\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setFieldValue('avatar', reader.result);\n                    setFieldValue('avatarPreview', reader.result);\n                }\n            }\n            reader.readAsDataURL(e.target.files[0]);\n        } catch (error) {\n            return <HeaderAlert error={true} message={\"File size exceeds 1mb.\"} />;\n        }\n    };\n\n    useEffect(() => {\n        if (success) {\n            navigate('/');\n        }\n    }, [success, navigate]);\n\n    return (\n        <>\n            {/* Title tag */}\n            <MetaData title={\"Hekto Sign Up\"} />\n\n            {/* React top loading bar */}\n            <HeaderLoading progressLoading={headerLoading} />\n\n            {/* Header alert */}\n            {\n                (error || success || loading) && checkAuthentication &&\n                <HeaderAlert error={error} message={message} />\n            }\n\n            {/* Signup */}\n            <div className=\"users-page my-5 py-5\">\n                <Container >\n                    <Card className=\"p-3 p-md-5 border-0 card-shadow\">\n                        <Card.Title className=\"fw-bold mb-1 text-center\">Create Account</Card.Title>\n                        <span className=\"text-center text-gray-500-color font-lato font-17\">Join Hekto today for exciting offers.</span>\n                        <Form encType=\"multipart/form-data\" onSubmit={handleSubmit} className=\"mt-5\">\n                            <Form.Group className=\"mb-4\" controlId=\"name\">\n                                <Form.Control type=\"text\" name=\"name\" value={values.name} placeholder=\"Your name\" autoComplete=\"off\" className=\"font-lato font-16\" onChange={handleChange} onBlur={handleBlur} isInvalid={touched.name && errors.name} />\n                                {\n                                    errors.name && touched.name ?\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors.name}\n                                        </Form.Control.Feedback>\n                                        : null\n                                }\n                            </Form.Group>\n                            <Form.Group className=\"mb-4\" controlId=\"email\">\n                                <Form.Control type=\"email\" name=\"email\" value={values.email} autoComplete=\"off\" placeholder=\"Email address\" className=\"font-lato font-16\" onChange={handleChange} onBlur={handleBlur} isInvalid={touched.email && errors.email} />\n                                {\n                                    errors.email && touched.email ?\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors.email}\n                                        </Form.Control.Feedback>\n                                        : null\n                                }\n                            </Form.Group>\n                            <Form.Group className=\"mb-4\" controlId=\"password\">\n                                <Form.Control type=\"password\" autoComplete=\"off\" name=\"password\" value={values.password} placeholder=\"Password\" className=\"font-lato font-16\" onChange={handleChange} onBlur={handleBlur} isInvalid={touched.password && errors.password} />\n                                {\n                                    errors.password && touched.password ?\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors.password}\n                                        </Form.Control.Feedback>\n                                        : null\n                                }\n                            </Form.Group>\n                            <Form.Group className=\"mb-4\" controlId=\"avatar\">\n                                <Stack direction=\"horizontal\" className=\"register-image\">\n                                    <img src={values.avatarPreview} alt=\"Avatar Preview\" className=\"me-2 rounded-circle\" />\n                                    <Form.Control type=\"file\" name=\"avatar\" accept=\"image/*\" placeholder=\"Upload your Avatar\" className=\"font-lato font-16\" onChange={handleAvatarChange} onBlur={handleBlur} isInvalid={touched.avatar && errors.avatar} />\n                                </Stack>\n                                <span className=\"text-gray-500-color font-lato font-15\">*Image size should not exceed 1mb</span>\n                                {\n                                    errors.avatar && touched.avatar ?\n                                        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                            {errors.avatar}\n                                        </Form.Control.Feedback>\n                                        : null\n                                }\n                            </Form.Group>\n                            <Button type=\"submit\" onClick={() => setCheckAuthentication(true)} className=\"w-100 my-4 bg-secondary-color border-0 rounded-1\">\n                                Create Account\n                            </Button>\n                        </Form>\n                    </Card>\n                </Container>\n            </div>\n        </>\n    )\n}\n\nexport default Signup\n","import * as Yup from \"yup\";\n\n// User schemas\nexport const loginSchema = Yup.object({\n    email: Yup.string().email(\"Invalid Email\").required(\"Please enter your email\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Please enter your password\")\n});\n\nexport const forgotPassSchema = Yup.object({\n    email: Yup.string().email(\"Invalid Email\").required(\"Please enter your email\")\n});\n\nexport const resetPassSchema = Yup.object({\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required(\"Please enter your new password\"),\n    confirmPassword: Yup.string().min(6, 'Password must be at least 6 characters').oneOf([Yup.ref('password'), null], 'Password does not match').required(\"Please confirm your new password\"),\n});\n\nexport const signupSchema = Yup.object({\n    name: Yup.string().min(2, \"Name must be at least 2 characters\").max(25, \"Name should not be more than 25 characters\").required(\"Please enter your name\"),\n    email: Yup.string().email(\"Invalid Email\").required(\"Please enter your email\"),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required(\"Please enter your password\"),\n    avatar: Yup.mixed().required(\"Please enter your image\")\n});\n\nexport const profileSchema = Yup.object({\n    name: Yup.string().min(2, \"Name must be at least 2 characters\").max(25, \"Name should not be more than 25 characters\").required(\"Please enter your name\"),\n    email: Yup.string().email(\"Invalid Email\").required(\"Please enter your email\"),\n});\n\nexport const profilePasswordSchema = Yup.object({\n    oldPassword: Yup.string().min(6, 'Old password must be at least 6 characters').required(\"Please enter your old password\"),\n    newPassword: Yup.string().min(6, 'New password must be at least 6 characters').required(\"Please enter your new password\"),\n    confirmNewPassword: Yup.string().min(6, 'New password must be at least 6 characters').oneOf([Yup.ref('newPassword'), null], 'Password does not match').required(\"Please confirm your new password\"),\n});\n\n// Cart schemas\nexport const shippingSchema = Yup.object({\n    address: Yup.string().min(6, 'Address must be at least 6 characters').required(\"Please enter your address\"),\n    city: Yup.string().min(3, 'City must be at least 3 characters').required(\"Please enter your city\"),\n    state: Yup.string().required(\"Please select your state\"),\n    landmark: Yup.string().min(3, 'Landmark must be at least 3 characters'),\n    pinCode: Yup.number().typeError(\"Pin code must be a number\").min(3, 'Pin code must be at least 3 characters').required(\"Please enter your pin code\"),\n    phoneNo: Yup.number().typeError(\"Phone number must be a number\").required(\"Please enter your phone number\"),\n});\n\n// Admin schemas\nexport const productSchema = Yup.object({\n    name: Yup.string().min(3, \"Name must be at least 3 characters\").required(\"Please enter product name\"),\n    price: Yup.number().typeError(\"Price must be a number\").required(\"Please enter product price\"),\n    description: Yup.string().min(25, \"Description must be at least 25 characters\").max(2000, \"Description should not be more than 2000 characters\").required(\"Please enter product description\"),\n    category: Yup.string().required(\"Please select product category\"),\n    stock: Yup.number().typeError(\"Stock must be a number\").required(\"Please enter product stock\"),\n    images: Yup.mixed().required(\"Please choose product image\"),\n    imagesPreview: Yup.mixed(),\n});\n\nexport const updateUserSchema = Yup.object({\n    name: Yup.string().min(2, \"Name must be at least 2 characters\").max(25, \"Name should not be more than 25 characters\").required(\"Please enter name\"),\n    email: Yup.string().email(\"Invalid Email\").required(\"Please enter email\"),\n    role: Yup.string().required(\"Please select role\"),\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["_ref","title","_jsx","HelmetProvider","children","Helmet","initialValues","name","email","password","avatar","avatarPreview","dispatch","useDispatch","navigate","useNavigate","_useSelector","useSelector","state","user","loading","isAuthenticated","success","error","message","headerLoading","_useState","useState","_useState2","_slicedToArray","checkAuthentication","setCheckAuthentication","_useFormik","useFormik","validationSchema","signupSchema","onSubmit","values","registerForm","FormData","set","trim","toLowerCase","register","setFieldValue","errors","touched","handleBlur","handleChange","handleSubmit","useEffect","_jsxs","_Fragment","MetaData","HeaderLoading","progressLoading","HeaderAlert","className","Container","Card","Form","encType","controlId","type","value","placeholder","autoComplete","onChange","onBlur","isInvalid","Stack","direction","src","alt","accept","e","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","Button","onClick","loginSchema","Yup","required","min","forgotPassSchema","resetPassSchema","confirmPassword","oneOf","max","profileSchema","profilePasswordSchema","oldPassword","newPassword","confirmNewPassword","shippingSchema","address","city","landmark","pinCode","typeError","phoneNo","productSchema","price","description","category","stock","images","imagesPreview","updateUserSchema","role","CardImg","React","ref","bsPrefix","variant","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","classNames","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}